openapi: 3.0.3
info:
  title: AI Shopping Scraper API
  description: |
    Intelligent scraping system API for populating e-commerce world model with multi-category support.
    
    ## Features
    - Dynamic site discovery and scraping
    - Multi-category product classification
    - AI training data generation
    - Real-time status tracking
    - Performance monitoring

    ## Architecture Compliance
    This API follows industry standards as defined in SCRAPING_REQUIREMENTS.md:
    - Response times < 200ms for API queries
    - Proper HTTP status codes and error handling
    - Rate limiting and authentication
    - Data validation and sanitization
    - Structured logging and monitoring

  version: 2.1.0
  contact:
    name: API Support
    email: pdamadon@gmail.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:3000
    description: Development server
  - url: https://api.scraper.example.com
    description: Production server

paths:
  /health:
    get:
      summary: Health Check
      description: |
        System health check endpoint. Returns detailed system status including:
        - Memory usage and performance metrics
        - Database connectivity
        - System uptime
        - Individual component health
        
        Target response time: < 50ms
      operationId: getHealthStatus
      tags:
        - System
      responses:
        '200':
          description: System is healthy
          headers:
            X-Response-Time:
              description: Response time in milliseconds
              schema:
                type: string
                example: "25ms"
            X-Health-Status:
              description: Overall health status
              schema:
                type: string
                enum: [healthy, unhealthy]
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
              example:
                status: "healthy"
                timestamp: "2025-08-11T10:30:00.000Z"
                uptime: 86400
                response_time_ms: 24.5
                checks:
                  memory:
                    name: "Memory Usage"
                    status: "pass"
                    heap_used_mb: 45
                    heap_usage_percent: 60
                  database:
                    name: "Database Connectivity" 
                    status: "pass"
                    connection_pool: "healthy"
        '503':
          description: System is unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'

  /api/v1/scraping/request:
    post:
      summary: Request New Scraping Task
      description: |
        Submit a new scraping request for AI agent integration. The system will:
        1. Validate the request
        2. Discover relevant sites (if not specified)
        3. Queue scraping tasks
        4. Return request tracking information
        
        This endpoint enables AI agents to request data not in the world model.
      operationId: requestScraping
      tags:
        - Scraping
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScrapingRequest'
            example:
              query_intent: "best price dozen roses seattle"
              product_type: "flowers"
              location: "seattle"
              sites: []
              priority: "high"
              requestor: "ai_agent_session_123"
      responses:
        '202':
          description: Scraping request accepted and queued
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScrapingRequestResponse'
              example:
                request_id: "req_123456789"
                status: "queued"
                estimated_completion: "2025-08-11T15:30:00Z"
                discovery_phase: "pending"
                queue_position: 3
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Authentication required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/scraping/status/{requestId}:
    get:
      summary: Get Scraping Request Status
      description: |
        Retrieve current status and progress of a scraping request.
        Provides real-time updates on discovery, scraping, and data processing phases.
      operationId: getScrapingStatus
      tags:
        - Scraping
      security:
        - bearerAuth: []
      parameters:
        - name: requestId
          in: path
          required: true
          description: Unique request identifier
          schema:
            type: string
          example: "req_123456789"
      responses:
        '200':
          description: Request status retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScrapingStatus'
              example:
                request_id: "req_123456789"
                status: "in_progress"
                stage: "scraping"
                progress:
                  sites_discovered: 15
                  sites_processing: 8
                  sites_completed: 7
                  products_scraped: 847
                  estimated_completion: "2025-08-11T15:30:00Z"
                created_at: "2025-08-11T14:00:00Z"
                updated_at: "2025-08-11T14:25:00Z"
        '404':
          description: Request not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/v1/scraping/results/{requestId}:
    get:
      summary: Get Scraping Results
      description: |
        Retrieve completed scraping results including discovered products,
        categories, and data quality metrics.
      operationId: getScrapingResults
      tags:
        - Scraping
      security:
        - bearerAuth: []
      parameters:
        - name: requestId
          in: path
          required: true
          description: Unique request identifier
          schema:
            type: string
          example: "req_123456789"
      responses:
        '200':
          description: Scraping results retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScrapingResults'
        '404':
          description: Request not found or not completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '202':
          description: Request still in progress
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScrapingStatus'

  /api/v1/world-model/products:
    get:
      summary: Query World Model Products
      description: |
        Query products from the world model with advanced filtering and categorization.
        Supports multi-category queries and semantic search preparation.
      operationId: queryProducts
      tags:
        - World Model
      parameters:
        - name: category_ids
          in: query
          description: Filter by category IDs (comma-separated)
          schema:
            type: string
          example: "brand_patagonia,product_type_jackets"
        - name: brand
          in: query
          description: Filter by brand canonical ID
          schema:
            type: string
          example: "brand_patagonia"
        - name: gender_target
          in: query
          description: Filter by gender target
          schema:
            type: string
            enum: [mens, womens, unisex]
          example: "mens"
        - name: price_min
          in: query
          description: Minimum price in cents
          schema:
            type: integer
          example: 5000
        - name: price_max
          in: query
          description: Maximum price in cents
          schema:
            type: integer
          example: 20000
        - name: availability
          in: query
          description: Filter by availability status
          schema:
            type: string
            enum: [in_stock, out_of_stock]
          example: "in_stock"
        - name: limit
          in: query
          description: Maximum number of results
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
        - name: offset
          in: query
          description: Number of results to skip
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Products retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductQueryResponse'

  /api/v1/world-model/categories:
    get:
      summary: Get Category Hierarchy
      description: |
        Retrieve the complete category hierarchy with navigation paths
        and relationship information for AI agent training.
      operationId: getCategories
      tags:
        - World Model
      parameters:
        - name: hierarchy_level
          in: query
          description: Filter by hierarchy level (1-4)
          schema:
            type: integer
            minimum: 1
            maximum: 4
        - name: category_type
          in: query
          description: Filter by category type
          schema:
            type: string
            enum: [gender, product_type, brand, promotion]
        - name: status
          in: query
          description: Filter by category status
          schema:
            type: string
            enum: [active, inactive]
            default: active
      responses:
        '200':
          description: Categories retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryHierarchyResponse'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for API authentication

  schemas:
    HealthResponse:
      type: object
      required:
        - status
        - timestamp
        - uptime
        - response_time_ms
        - checks
      properties:
        status:
          type: string
          enum: [healthy, unhealthy, error]
          description: Overall system health status
        timestamp:
          type: string
          format: date-time
          description: Health check timestamp
        uptime:
          type: number
          description: System uptime in seconds
        response_time_ms:
          type: number
          description: Health check response time in milliseconds
        checks:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/HealthCheckResult'
        system:
          $ref: '#/components/schemas/SystemInfo'

    HealthCheckResult:
      type: object
      required:
        - name
        - status
        - duration_ms
        - critical
      properties:
        name:
          type: string
          description: Human-readable check name
        status:
          type: string
          enum: [pass, fail, warning]
          description: Check status
        duration_ms:
          type: number
          description: Check execution time in milliseconds
        critical:
          type: boolean
          description: Whether this check is critical for system health
        error:
          type: string
          description: Error message if check failed

    SystemInfo:
      type: object
      properties:
        node_version:
          type: string
          description: Node.js version
        platform:
          type: string
          description: Operating system platform
        memory:
          type: object
          description: Memory usage statistics
        pid:
          type: integer
          description: Process ID

    ScrapingRequest:
      type: object
      required:
        - query_intent
        - product_type
      properties:
        query_intent:
          type: string
          description: Natural language description of what to scrape
          example: "best price dozen roses seattle"
        product_type:
          type: string
          description: Product category type
          example: "flowers"
        location:
          type: string
          description: Geographic location for localized results
          example: "seattle"
        sites:
          type: array
          items:
            type: string
          description: Specific sites to scrape (empty for auto-discovery)
          example: []
        priority:
          type: string
          enum: [low, medium, high, urgent]
          default: medium
          description: Request processing priority
        requestor:
          type: string
          description: Identifier for the requesting system/session
          example: "ai_agent_session_123"
        max_products:
          type: integer
          minimum: 1
          maximum: 10000
          default: 1000
          description: Maximum number of products to scrape
        timeout_minutes:
          type: integer
          minimum: 1
          maximum: 30
          default: 10
          description: Maximum processing time in minutes

    ScrapingRequestResponse:
      type: object
      required:
        - request_id
        - status
        - created_at
      properties:
        request_id:
          type: string
          description: Unique request identifier
          example: "req_123456789"
        status:
          type: string
          enum: [queued, in_progress, completed, failed]
          description: Current request status
        estimated_completion:
          type: string
          format: date-time
          description: Estimated completion time
        discovery_phase:
          type: string
          enum: [pending, running, completed]
          description: Site discovery phase status
        queue_position:
          type: integer
          description: Position in processing queue
        created_at:
          type: string
          format: date-time
          description: Request creation timestamp

    ScrapingStatus:
      type: object
      required:
        - request_id
        - status
        - stage
        - created_at
        - updated_at
      properties:
        request_id:
          type: string
          description: Unique request identifier
        status:
          type: string
          enum: [queued, in_progress, completed, failed, cancelled]
          description: Overall request status
        stage:
          type: string
          enum: [queued, site_discovery, scraping, data_processing, completed]
          description: Current processing stage
        progress:
          $ref: '#/components/schemas/ScrapingProgress'
        error:
          type: string
          description: Error message if request failed
        created_at:
          type: string
          format: date-time
          description: Request creation timestamp
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp

    ScrapingProgress:
      type: object
      properties:
        sites_discovered:
          type: integer
          description: Number of sites discovered for scraping
        sites_processing:
          type: integer
          description: Number of sites currently being processed
        sites_completed:
          type: integer
          description: Number of sites completed successfully
        sites_failed:
          type: integer
          description: Number of sites that failed processing
        products_scraped:
          type: integer
          description: Total products scraped so far
        estimated_completion:
          type: string
          format: date-time
          description: Updated completion estimate
        current_site:
          type: string
          description: Currently processing site
        performance_metrics:
          $ref: '#/components/schemas/PerformanceMetrics'

    PerformanceMetrics:
      type: object
      properties:
        avg_response_time_ms:
          type: number
          description: Average response time per request
        success_rate:
          type: number
          minimum: 0
          maximum: 1
          description: Success rate as decimal (0.0 to 1.0)
        products_per_minute:
          type: number
          description: Scraping throughput

    ScrapingResults:
      type: object
      required:
        - request_id
        - status
        - summary
        - products
      properties:
        request_id:
          type: string
          description: Unique request identifier
        status:
          type: string
          enum: [completed, failed]
          description: Final request status
        summary:
          $ref: '#/components/schemas/ScrapingResultSummary'
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
          description: Scraped products
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
          description: Discovered categories
        sites:
          type: array
          items:
            $ref: '#/components/schemas/SiteResult'
          description: Site processing results

    ScrapingResultSummary:
      type: object
      properties:
        total_products:
          type: integer
          description: Total products scraped
        unique_products:
          type: integer
          description: Unique products after deduplication
        sites_processed:
          type: integer
          description: Number of sites processed
        categories_discovered:
          type: integer
          description: New categories discovered
        processing_time_seconds:
          type: number
          description: Total processing time
        data_quality_score:
          type: number
          minimum: 0
          maximum: 100
          description: Overall data quality score

    Product:
      type: object
      required:
        - product_id
        - title
        - price
        - categories
        - created_at
        - updated_at
      properties:
        product_id:
          type: string
          description: Unique product identifier
        title:
          type: string
          description: Product title
        description:
          type: string
          description: Product description
        price:
          type: integer
          description: Price in cents
        original_price:
          type: integer
          description: Original price before discounts
        availability:
          type: string
          enum: [in_stock, out_of_stock, pre_order]
          description: Stock availability
        categories:
          type: array
          items:
            $ref: '#/components/schemas/ProductCategory'
          description: Product category relationships
        brand:
          $ref: '#/components/schemas/Brand'
        gender_target:
          type: array
          items:
            type: string
            enum: [mens, womens, unisex]
        attributes:
          $ref: '#/components/schemas/ProductAttributes'
        images:
          type: array
          items:
            $ref: '#/components/schemas/ProductImage'
        source_url:
          type: string
          format: uri
          description: Original product URL
        scraped_at:
          type: string
          format: date-time
          description: Scraping timestamp
        created_at:
          type: string
          format: date-time
          description: Creation timestamp
        updated_at:
          type: string
          format: date-time
          description: Last update timestamp

    ProductCategory:
      type: object
      required:
        - category_id
        - category_type
        - category_name
        - is_primary
        - confidence_score
      properties:
        category_id:
          type: string
          description: Category canonical ID
        category_type:
          type: string
          enum: [gender, product_type, brand, promotion]
          description: Category hierarchy level type
        category_name:
          type: string
          description: Human-readable category name
        category_path:
          type: string
          description: Category URL path
        is_primary:
          type: boolean
          description: Whether this is the primary category
        hierarchy_level:
          type: integer
          minimum: 1
          maximum: 4
          description: Level in 4-level hierarchy
        confidence_score:
          type: number
          minimum: 0
          maximum: 1
          description: AI classification confidence

    Brand:
      type: object
      properties:
        name:
          type: string
          description: Brand name
        canonical_id:
          type: string
          description: Brand canonical identifier
        tier:
          type: string
          enum: [premium, established, emerging]
          description: Brand classification tier

    ProductAttributes:
      type: object
      properties:
        color:
          type: array
          items:
            type: string
          description: Available colors
        sizes:
          type: array
          items:
            type: string
          description: Available sizes
        materials:
          type: array
          items:
            type: string
          description: Materials used
        style_tags:
          type: array
          items:
            type: string
          description: Style classifications

    ProductImage:
      type: object
      required:
        - url
        - type
      properties:
        url:
          type: string
          format: uri
          description: Image URL
        alt_text:
          type: string
          description: Image alt text
        type:
          type: string
          enum: [primary, secondary, detail]
          description: Image type classification

    Category:
      type: object
      required:
        - canonical_id
        - name
        - hierarchy_level
        - category_type
        - status
      properties:
        canonical_id:
          type: string
          description: Canonical category identifier
        name:
          type: string
          description: Category display name
        slug:
          type: string
          description: URL-friendly identifier
        description:
          type: string
          description: Category description
        hierarchy_level:
          type: integer
          minimum: 1
          maximum: 4
          description: Level in hierarchy (1=Gender, 2=Product, 3=Brand, 4=Promotion)
        category_type:
          type: string
          enum: [gender, product_type, brand, promotion]
          description: Category type classification
        parent_categories:
          type: array
          items:
            type: string
          description: Parent category canonical IDs
        child_categories:
          type: array
          items:
            type: string
          description: Child category canonical IDs
        url_path:
          type: string
          description: Category URL path
        estimated_products:
          type: integer
          description: Expected number of products
        actual_product_count:
          type: integer
          description: Current number of products
        status:
          type: string
          enum: [active, inactive, archived]
          description: Category status

    SiteResult:
      type: object
      required:
        - site_url
        - status
        - products_found
      properties:
        site_url:
          type: string
          format: uri
          description: Site base URL
        status:
          type: string
          enum: [success, failed, partial]
          description: Processing status
        products_found:
          type: integer
          description: Number of products found
        categories_discovered:
          type: integer
          description: Number of categories discovered
        processing_time_seconds:
          type: number
          description: Site processing time
        error:
          type: string
          description: Error message if processing failed
        quality_score:
          type: number
          minimum: 0
          maximum: 100
          description: Data quality score for this site

    ProductQueryResponse:
      type: object
      required:
        - products
        - pagination
        - filters_applied
      properties:
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        pagination:
          $ref: '#/components/schemas/Pagination'
        filters_applied:
          type: object
          description: Summary of applied filters
        total_count:
          type: integer
          description: Total products matching criteria
        query_time_ms:
          type: number
          description: Query execution time

    CategoryHierarchyResponse:
      type: object
      required:
        - categories
        - hierarchy_paths
      properties:
        categories:
          type: array
          items:
            $ref: '#/components/schemas/Category'
        hierarchy_paths:
          type: array
          items:
            $ref: '#/components/schemas/HierarchyPath'
        total_categories:
          type: integer
          description: Total number of categories
        last_updated:
          type: string
          format: date-time
          description: Last hierarchy update

    HierarchyPath:
      type: object
      properties:
        path_id:
          type: string
          description: Unique path identifier
        full_path:
          type: string
          description: Complete hierarchy path
        path_segments:
          type: array
          items:
            $ref: '#/components/schemas/PathSegment'
        estimated_products:
          type: integer
          description: Products in this path

    PathSegment:
      type: object
      properties:
        level:
          type: integer
          minimum: 1
          maximum: 4
        type:
          type: string
          enum: [gender, product_type, brand, promotion]
        name:
          type: string
        canonical_id:
          type: string

    Pagination:
      type: object
      required:
        - limit
        - offset
        - has_more
      properties:
        limit:
          type: integer
          description: Number of items per page
        offset:
          type: integer
          description: Number of items skipped
        has_more:
          type: boolean
          description: Whether more results are available
        next_offset:
          type: integer
          description: Offset for next page

    ErrorResponse:
      type: object
      required:
        - error
        - message
        - timestamp
      properties:
        error:
          type: string
          description: Error code
        message:
          type: string
          description: Human-readable error message
        details:
          type: string
          description: Additional error details
        timestamp:
          type: string
          format: date-time
          description: Error timestamp
        request_id:
          type: string
          description: Request correlation ID

tags:
  - name: System
    description: System health and monitoring
  - name: Scraping
    description: Dynamic scraping requests and management
  - name: World Model
    description: Query and access world model data